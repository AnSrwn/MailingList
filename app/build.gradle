plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: '../dependencies.gradle'

def credentialsPropertiesFile = rootProject.file("credentials.properties")
def credentialsProperties = new Properties()
credentialsProperties.load(new FileInputStream(credentialsPropertiesFile))

android {
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "com.example.mailinglist"
        minSdk versions.minSdk
        targetSdk versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                appAuthRedirectScheme: 'com.example.mailinglist'
        ]
        buildConfigField("String", "USER", credentialsProperties['user'])
        buildConfigField("String", "PASSWORD", credentialsProperties['password'])
    }

    buildFeatures {
        viewBinding true
        compose true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    packagingOptions {
        resources {
            pickFirsts += ['META-INF/LICENSE.md', 'META-INF/NOTICE.md']
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.composeVersion
    }
    namespace 'com.example.mailinglist'
}

dependencies {
    implementation "androidx.core:core-ktx:$versions.coreVersion"
    implementation "androidx.appcompat:appcompat:$versions.appCompatVersion"
    implementation "androidx.fragment:fragment-ktx:$versions.fragmentVersion"
    implementation "com.google.android.material:material:$versions.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintVersion"
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion'"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycleVersion"

    // JavaMail API
    implementation "com.sun.mail:jakarta.mail:$versions.jakartaVersion"
    implementation "com.sun.activation:jakarta.activation:$versions.jakartaVersion"

    // JSoup for html parsing
    implementation "org.jsoup:jsoup:$versions.jsoupVersion"

    // JodaTime to calculate time period
    implementation "joda-time:joda-time:$versions.jodaVersion"

    // Dagger Hilt for DI
    implementation "com.google.dagger:hilt-android:$versions.hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$versions.hiltVersion"

    // Compose
    implementation "androidx.compose.runtime:runtime:$versions.composeVersion"
    implementation "androidx.compose.ui:ui:$versions.composeVersion"
    implementation "androidx.compose.foundation:foundation:$versions.composeFoundationVersion"
    implementation "androidx.compose.foundation:foundation-layout:$versions.composeFoundationVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$versions.composeVersion"
    implementation "androidx.compose.ui:ui-tooling:$versions.composeVersion"

    // Unit Tests
    testImplementation "junit:junit:$versions.junitVersion"
    testImplementation "io.mockk:mockk:$versions.mockkVersion"

    androidTestImplementation "androidx.test.ext:junit:$versions.androidxTestJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidxTestEspresso"

    // Hilt Unit Tests
    testImplementation "com.google.dagger:hilt-android-testing:$versions.hiltVersion"
    kaptTest "com.google.dagger:hilt-compiler:$versions.hiltVersion"
}

kapt {
    correctErrorTypes true
}
